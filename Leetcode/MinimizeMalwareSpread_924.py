class Solution(object):
    """
    DFS
    Key Question: How many # of nodes can be non-infected after removing just 1 initially infected node?
    A: Nodes that are infected only once -> record the initial infected node id

    Time: O(|V||E|)
    """
    def minMalwareSpread(self, graph, initial):
        """
        :type graph: List[List[int]]
        :type initial: List[int]
        :rtype: int
        """
        self.graph = graph
        self.N = len(graph)
        self.infected = [None for i in range(self.N)] # non-infected by default
        for x in initial: self.infected[x] = [x] # infected by which node
        for x in initial:
            self.visited = [0 for i in range(self.N)]
            self.DFSToAffectAll(x, x)
        # find which node to be removed can give minimum total infected nodes
        reducible = {i:0 for i in initial}
        for i,x in enumerate(self.infected):
            if x!=None and len(x)==1: # could be non-infected
                reducible[x[0]] += 1
        ans, ans_idx = 0, -1
        for k,v in reducible.items():
            if v>ans or (v==ans and (k<ans_idx or ans_idx==-1)): ans, ans_idx = v, k
        return ans_idx

    def DFSToAffectAll(self, cur, init):
        self.visited[cur] = 1
        for nxt in range(self.N):
            if self.graph[cur][nxt]==1 and self.visited[nxt]==0:
                self.infected[nxt] = self.infected[nxt]+[init] if self.infected[nxt]!=None else [init]
                self.DFSToAffectAll(nxt, init)
